import { useState, useEffect } from 'react'
import './Navbar.css'

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false)
  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  // Prevent scrolling when menu is open
  useEffect(() => {
    if (isOpen) {
      document.body.style.overflow = 'hidden'
    } else {
      document.body.style.overflow = 'auto'
    }
    return () => {
      document.body.style.overflow = 'auto'
    }
  }, [isOpen])

  const BuyTemplateButton = ({ className = '' }) => (
    <div className={`card example-2 ${className}`}>
      <div className="inner">
        <button className="bg-[#181c25] flex items-center justify-center text-center text-white text-[14px] px-6 h-[38px] font-poppins font-light whitespace-nowrap">
          Buy This Template
        </button>
      </div>
    </div>
  )

  return (
    <nav className="h-[80px] bg-[#08090a] lg:mt-10">
      <div className="h-full max-w-[100px] mx-auto px-4 lg:px-8">
        <div className="h-full flex items-center justify-center">
          {/* Desktop Layout */}
          <div className="flex items-center justify-between lg:justify-center w-full max-w-[00px] lg:gap-8 xl:gap-16">
            {/* Logo */}
            <a href="https://outliny.com/" className="flex items-center flex-shrink-0">
              <img
                src="/Logo.svg"
                className="h-10 lg:h-14 w-[120px] lg:w-[140px] 1xl:w-[160px] object-contain"
                alt="Outliny Logo"
              />
            </a>

            {/* Desktop Navigation and Button */}
            <div className="hidden lg:flex lg:items-center lg:justify-between lg:flex-1 xl:justify-center xl:gap-5">
              <ul className="flex items-center justify-center flex-1 lg:max-w-full gap-4 xl:gap-8 px-4 xl:px-8 py-2 bg-custom-gradient1 gradient-border">  
                {navItems.map((item, index) => (
                  <li key={index} className="relative group">
                    <a
                      href={item.href}
                      className="block py-2 px-2 xl:px-3 text-white md:hover:bg-transparent 
                      md:hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] 
                      after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 
                      after:transition-transform after:duration-300 font-poppins font-light text-[14px] xl:text-[16px] leading-[100%] capitalize whitespace-nowrap"
                    >
                      {item.name}
                    </a>
                  </li>
                ))}
              </ul>
              <div className="flex-shrink-0 ml-8">
                <BuyTemplateButton />
              </div>
            </div>  

            {/* Hamburger Button - Mobile Only */}
            <button
              onClick={() => setIsOpen(!isOpen)}
              className="lg:hidden text-white p-2 w-10 h-10 rounded-lg z-50"
              aria-label="Toggle navigation"
            >
              <svg
                className="w-6 h-6"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                viewBox="0 0 24 24"
              >
                {isOpen ? (
                  <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                ) : (
                  <>
                    <path strokeLinecap="round" strokeLinejoin="round" d="M4 6h16" />
                    <path strokeLinecap="round" strokeLinejoin="round" d="M4 12h16" />
                    <path strokeLinecap="round" strokeLinejoin="round" d="M4 18h16" />
                  </>
                )}
              </svg>
            </button>
          </div>

          {/* Mobile Navigation */}
          <div
            className={`fixed inset-0 bg-black/50 z-40 lg:hidden transition-opacity duration-300 ${
              isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'
            }`}
            onClick={() => setIsOpen(false)}
          >
            <div
              className={`absolute right-0 top-0 h-full w-full bg-black transform transition-transform duration-300 ease-in-out ${
                isOpen ? 'translate-x-0' : 'translate-x-full'
              }`}
            >
              <ul className="flex flex-col items-start pt-[100px] px-6 gap-4">
                {navItems.map((item, index) => (
                  <li key={index} className="w-full">
                    <a
                      href={item.href}
                      className="block py-3 text-white hover:bg-gray-700 relative 
                      after:content-[''] after:block after:h-[2px] after:w-full after:bg-white 
                      after:scale-x-0 hover:after:scale-x-100 after:transition-transform after:duration-300 
                      font-poppins font-light text-[16px] leading-[100%] capitalize"
                      onClick={() => setIsOpen(false)}
                    >
                      {item.name}
                    </a>
                  </li>
                ))}
                <li className="mt-6 w-full">
                  <BuyTemplateButton className="w-full" />
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </nav>
  )
}

export default Navbar
----------------------------


import React, { useState } from 'react'
import { Menu ,X } from 'lucide-react'

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false)
  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  return (
    <nav className="flex items-center justify-around p-4 md:p-6 lg:px-12  shadow-md">
      {/* Logo */}
      <div>
        <a href="https://outliny.com/">
          <img src="/Logo.svg" alt="Outliny Logo" className="w-28" />
        </a>
      </div>

      {/* Desktop Navigation */}
      <div className="">
              <ul className="flex items-center justify-center flex-1 lg:max-w-full gap-4 xl:gap-8 px-4 xl:px-8 py-2 bg-custom-gradient1 gradient-border">  
                {navItems.map((item, index) => (
                  <li key={index} className="relative group">
                    <a
                      href={item.href}
                      className="block py-2 px-2 xl:px-3 text-white md:hover:bg-transparent 
                      md:hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] 
                      after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 
                      after:transition-transform after:duration-300 font-poppins font-light text-[14px] xl:text-[16px] leading-[100%] capitalize whitespace-nowrap rounded-xl"
                    >
                      {item.name}
                    </a>
                  </li>
                ))}
              </ul>
              </div>

      {/* CTA Button */}
      <div className="hidden md:block">
        <button className="text-white bg-[#181c25] px-6 py-2 rounded-xl font-poppins font-light text-sm">
          Buy This Template
        </button>
      </div>

      {/* Mobile Menu Button */}
      <div className="md:hidden">
        <button onClick={() => setIsOpen(!isOpen)} className="text-white">
          {isOpen ? <X size={28} /> : <Menu size={28} />}
        </button>
      </div>

      {/* Mobile Navigation */}
      {isOpen && (
        <div className="absolute top-16 left-0 w-full bg-white shadow-md p-4 flex flex-col items-center md:hidden">
          <ul className="flex flex-col gap-4">
            {navItems.map((item, index) => (
              <li key={index} className="text-black">
                <a href={item.href} className="hover:underline" onClick={() => setIsOpen(false)}>
                  {item.name}
                </a>
              </li>
            ))}
          </ul>
          <button className="mt-4 text-white bg-[#181c25] px-6 py-2 rounded-xl font-poppins font-light text-sm">
            Buy This Template
          </button>
        </div>
      )}
    </nav>
  )
}

export default Navbar
------------------------------






import { useState, useEffect } from 'react'
import './Navbar.css'
import { Menu, X } from 'lucide-react'

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false)

  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  // Prevent body scrolling when the mobile menu is open
  useEffect(() => {
    document.body.style.overflow = isOpen ? 'hidden' : ''
  }, [isOpen])

  const BuyTemplateButton = ({ className = '' }) => (
    <div className={`card example-2 ${className}`}>
      <div className="inner">
        <button className="bg-[#181c25] flex items-center justify-center text-white text-[14px] px-6 h-[38px] font-poppins font-light whitespace-nowrap">
          Buy This Template
        </button>
      </div>
    </div>
  )

  return (
    <nav className="h-[80px] bg-[#08090a] lg:mt-10">
      <div className="h-full max-w-[1400px] mx-auto px-4 lg:px-8 flex justify-evenly items-center">
        <div className="h-full flex items-center justify-evenly">
          {/* first div Logo */}

          <div>
            <a href="https://outliny.com/" className="flex items-center flex-shrink-0">
              <img
                src="/Logo.svg"
                className="h-10 lg:h-14 w-[120px] lg:w-[140px] xl:w-[160px] object-contain"
                alt="Outliny Logo"
              />
            </a>
          </div>

          {/* Desktop Navigation second div  */}
          <div className="hidden lg:flex lg:items-center lg:justify-between lg:flex-1">
            <ul className="flex items-center justify-center w-full gap-6 px-4  py-2 bg-custom-gradient1 gradient-border">
              {navItems.map((item, index) => (
                <li key={index} className="relative group">
                  <a
                    href={item.href}
                    className="block py-2 px-3 xl:px-4 text-white md:hover:bg-transparent 
                    md:hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] 
                    after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 
                    after:transition-transform after:duration-300 font-poppins font-light text-[14px] xl:text-[16px] leading-[100%] capitalize whitespace-nowrap"
                  >
                    {item.name}
                  </a>
                </li>
              ))}
            </ul>
            <div className="flex-shrink-0 ml-8">
              <BuyTemplateButton />
            </div>
          </div>

          {/* Mobile Menu Toggle Button */}
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="lg:hidden text-white p-2 w-10 h-10 rounded-lg z-50 flex items-center justify-center"
            aria-label="Toggle navigation"
          >
            {isOpen ? <X size={28} /> : <Menu size={28} />}
          </button>
        </div>

        {/* Mobile Navigation */}
        <div
          className={`fixed inset-0 bg-black/50 z-40 lg:hidden transition-opacity duration-300 ${
            isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'
          }`}
          onClick={() => setIsOpen(false)}
        >
          <div
            className={`absolute right-0 top-0 h-full w-3/4 max-w-[300px] bg-[#181c25] transform transition-transform duration-300 ease-in-out ${
              isOpen ? 'translate-x-0' : 'translate-x-full'
            }`}
          >
            {/* Close Button */}
            <button
              onClick={() => setIsOpen(false)}
              className="absolute top-5 right-5 text-white p-2"
              aria-label="Close navigation"
            >
              <X size={28} />
            </button>

            <ul className="flex flex-col items-start pt-[100px] px-6 gap-4">
              {navItems.map((item, index) => (
                <li key={index} className="w-full">
                  <a
                    href={item.href}
                    className="block py-3 text-white hover:bg-gray-700 relative 
                    after:content-[''] after:block after:h-[2px] after:w-full after:bg-white 
                    after:scale-x-0 hover:after:scale-x-100 after:transition-transform after:duration-300 
                    font-poppins font-light text-[16px] leading-[100%] capitalize"
                    onClick={() => setIsOpen(false)}
                  >
                    {item.name}
                  </a>
                </li>
              ))}
              <li className="mt-6 w-full">
                <BuyTemplateButton className="w-full" />
              </li>
            </ul>
          </div>
        </div>
      </div>
    </nav>
  )
}

export default Navbar


-----------------------

css
navbar






/* .card { 
    /* max-width: 500px; */
    width: 100%;
  
    border-radius: 10px;
  }
  
  .card .inner {
    padding: 23px;

    border: 1px solid #3f3a3a;
    border-radius: 10px;
  background-color: #181c25;

    border-radius: 10px;
    
  }
  


  .example-2 {
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    
  
    
  }
  
  
  .example-2 .inner {
    position: relative;
    z-index: 1;
   
    width: 200px;
    height: 5px;
    margin: 2px;
    
  }



  @keyframes rotate {
    from {
      transform: rotate(0);
    }
  
    to {
      transform: rotate(360deg);
    }
  }
  
  .example-2 .inner {
    margin: 2px;
    /* font-size: 10px; */
    
  }
  
  .example-2::before {
    content: "";
    display: block;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(238, 236, 236, 0.75) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    height: 200px;
    width: 75px;
    transform: translate(0);
    position: absolute;
    animation: rotate 3s linear forwards infinite;
    z-index: 0;
    top: 50%;
    transform-origin: top center;
  }
  

  

  
  @keyframes glow {
    0% {
      background-position: 0 0;
    }
  
    50% {
      background-position: 100% 0;
    }
  
    100% {
      background-position: 0 0;
    }
  }
  

  
  @keyframes animateOutline {
    0% {
      outline-width: 1px;
      outline-offset: 0;
      outline-color: rgba(0, 130, 206, 0);
    }
  
    10% {
      outline-color: rgba(0, 130, 206, 0.75  );
    }
  
    /* The animation finishes at 50% */
    50% {
      outline-width: 7px;
      outline-offset: 4px;
      outline-color: rgba(0, 130, 206, 0);
    }
  
    100% {
      outline-width: 7px;
      outline-offset: 4px;
      outline-color: rgba(102, 102, 102, 0);
    }
  }

  .example-2 .inner {
    position: relative;
    z-index: 1;
    width: 200px;
    height: 50px; /* Set a reasonable height */
    display: flex;
    align-items: center; /* Center vertically */
    justify-content: center; /* Center horizontally */
    margin: 2px;
}

.example-2 .inner button {
    text-align: center;
    width: 100%; /* Ensure button takes full width */
    height: 100%; /* Ensure button takes full height */
    display: flex;
    align-items: center;
    justify-content: center;
} */


-------------

import React, { useState } from 'react'
import { Menu, X } from 'lucide-react'
import './Navbar.css'

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false)

  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  return (
    <nav className="bg-[#08090a]">
      <div className="container mx-auto px-4 sm:px-6 lg:px-10">
        <div className="flex justify-between items-center py-4">
          {/* Logo */}
          <a href="https://outliny.com/" className="flex items-center">
            <img
              src="/Logo.svg"
              className="h-10 lg:h-14 w-[120px] lg:w-[140px] xl:w-[160px] object-contain"
              alt="Outliny Logo"
            />
          </a>

          {/* Desktop Menu */}
          <ul className="hidden md:flex space-x-4 gradient-border bg-custom-gradient1">
            {navItems.map((item, index) => (
              <li key={index} className="relative  ">
                <a
                  href={item.href}
                  className="block py-2 px-4 text-white hover:text-gray-400 
                    relative after:content-[''] after:block after:h-[2px] 
                    after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 
                    after:transition-transform after:duration-300 font-light text-[14px] xl:text-[16px] capitalize font-poppins"
                >
                  {item.name}
                </a>
              </li>
            ))}
          </ul>

          {/* Buy Button */}
          <div className="hidden md:block">
            <button className="bg-[#181c25] px-6 py-3 rounded-xl text-white text-[14px]">
              Buy This Template
            </button>
          </div>

          {/* Mobile Menu Button */}
          <button
            className="md:hidden text-white focus:outline-none"
            onClick={() => setIsOpen(!isOpen)}
          >
            {isOpen ? <X size={28} /> : <Menu size={28} />}
          </button>
        </div>

        {/* Mobile Menu */}
        {isOpen && (
          <div className="md:hidden flex flex-col items-center space-y-4 py-4">
            {navItems.map((item, index) => (
              <a key={index} href={item.href} className="text-white text-lg hover:text-gray-400">
                {item.name}
              </a>
            ))}
            <button className="bg-[#181c25] px-6 py-3 rounded-xl text-white text-[14px]">
              Buy This Template
            </button>
          </div>
        )}
      </div>
    </nav>
  )
}

export default Navbar


-------------------------
full code of navbar


'use client'
import './Navbar.css'
import { useState } from 'react'
import { Menu, X } from 'lucide-react'

const Navbar = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false)

  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  return (
    <div className="relative flex justify-between lg:justify-around items-center py-5 md:py-8 lg:py-12 px-5 md:px-8">
      {/* Logo */}
      <a href="https://outliny.com/" className="flex items-center flex-shrink-0">
        <img src="/Logo.svg" className="w-[100px] md:w-[120px] lg:w-[140px]" alt="Outliny Logo" />
      </a>

      {/* Desktop Navigation */}
      <div className="hidden lg:block">
        <ul className="flex    px-6  py-2 bg-custom-gradient1 gradient-border">
          {navItems.map((item, index) => (
            <li key={index} className="relative group">
              <a
                href={item.href}
                className="block px-3 xl:px-4 text-white hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 after:transition-transform after:duration-300 font-extralight text-[14px] xl:text-[16px] capitalize whitespace-nowrap"
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
      </div>

      <div className="flex items-center">
        {/* Login button */}
        <div className="example-2 rounded-btn">
          <div className="inner">
            <button className=" border border-[#3c3f47] rounded-lg font-light font-poppins">Login</button>
          </div>
        </div>

        {/* Hamburger (Mobile only) */}
        <button
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          className="lg:hidden hamburger-btn text-white focus:outline-none z-30 ml-5"
          aria-label={isMenuOpen ? 'Close menu' : 'Open menu'}
        >
          {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
        </button>
      </div>

      {/* Mobile Menu */}
      <div
        className={`fixed inset-0 bg-black z-20 transform ${
          isMenuOpen ? 'translate-x-0' : 'translate-x-full'
        } lg:hidden flex flex-col justify-center rounded-menu`}
      >
        <ul className="flex flex-col items-center space-y-6 w-full px-8">
          {navItems.map((item, index) => (
            <li
              key={index}
              className="w-full text-center"
          
            >
              <a
                href={item.href}
                onClick={() => setIsMenuOpen(false)}
                className="block py-3 px-4 text-white text-xl font-light hover:text-gray-400"
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>
  )
}

export default Navbar



------------------
 another full code



 'use client'
import './Navbar.css'
import { useState } from 'react'
import { Menu, X } from 'lucide-react'

const Navbar = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false)

  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Solutions', href: '/solutions' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources' },
    { name: 'Pricing', href: '/pricing' },
  ]

  return (
    <div
      className="fixed top-0 left-0 right-0 flex justify-between lg:justify-around items-center py-5 md:py-8 lg:py-4 px-5 md:px-8 bg-[#0d0e0f] z-50"
      style={{
        boxShadow: 'rgba(125, 116, 204, 0.25) 0px 4px 10px',
      }}
    >
      {/* Logo */}
      <a href="https://outliny.com/" className="flex items-center flex-shrink-0">
        <img src="/Logo.svg" className="w-[100px] md:w-[120px] lg:w-[140px]" alt="Outliny Logo" />
      </a>

      {/* Desktop Navigation */}
      <div className="hidden lg:block">
        <ul className="flex px-6 py-2">
          {navItems.map((item, index) => (
            <li key={index} className="relative group">
              <a
                href={item.href}
                className="block px-3 xl:px-4 text-white hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 after:transition-transform after:duration-300 font-extralight text-[14px] xl:text-[16px] capitalize whitespace-nowrap "
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
      </div>

      <div className="flex items-center">
        {/* Login button */}
        <div className="example-2 rounded-btn">
          <div className="inner">
            <button className="border border-[#3c3f47] rounded-lg font-light font-poppins">
              Login
            </button>
          </div>
        </div>

        {/* Hamburger (Mobile only) */}
        <button
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          className="lg:hidden hamburger-btn text-white focus:outline-none z-30 ml-5"
          aria-label={isMenuOpen ? 'Close menu' : 'Open menu'}
        >
          {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
        </button>
      </div>

      {/* Mobile Menu */}
      <div
        className={`fixed inset-0 bg-black z-20 transform ${
          isMenuOpen ? 'translate-x-0' : 'translate-x-full'
        } lg:hidden flex flex-col justify-center rounded-menu`}
      >
        <ul className="flex flex-col items-center space-y-6 w-full px-8">
          {navItems.map((item, index) => (
            <li key={index} className="w-full text-center">
              <a
                href={item.href}
                onClick={() => setIsMenuOpen(false)}
                className="block py-3 px-4 text-white text-xl font-light hover:text-gray-400"
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>
  )
}

export default Navbar










-------------------

'use client'
import './Navbar.css'
import { useState } from 'react'
import { Menu, X, ChevronDown } from 'lucide-react'

const Navbar = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isDropdownOpen, setIsDropdownOpen] = useState(false) // For mobile dropdown

  const navItems = [
    { name: 'About Us', href: '/about' },
    { name: 'Product', href: '/product' },
    { name: 'Features', href: '/features' },
    { name: 'Templates', href: '/templates' },
    { name: 'Resources', href: '/resources', hasDropdown: true }, // Added dropdown flag
    { name: 'Pricing', href: '/pricing' },
  ]

  const resourceDropdownItems = [
    { name: 'Dashboard', href: '/dashboard' },
    { name: 'Guides', href: '/guides' },
    { name: 'Blog', href: '/blog' },
    { name: 'Sign out', href: '/logout' },
  ]

  return (
    <div className="relative flex justify-between lg:justify-around items-center py-5 md:py-8 lg:py-12 px-5 md:px-8">
      {/* Logo */}
      <a href="https://outliny.com/" className="flex items-center flex-shrink-0">
        <img src="/Logo.svg" className="w-[100px] md:w-[120px] lg:w-[140px]" alt="Outliny Logo" />
      </a>

      {/* Desktop Navigation */}
      <div className="hidden lg:block">
        <ul className="flex px-6 py-2 bg-custom-gradient1 rounded-lg gradient-border">
          {navItems.map((item, index) => (
            <li key={index} className="relative group">
              {item.hasDropdown ? (
                <div className="relative">
                  <button className="flex items-center px-3 xl:px-4 text-white hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 after:transition-transform after:duration-300 font-extralight text-[14px] xl:text-[16px] capitalize whitespace-nowrap">
                    {item.name} <ChevronDown size={16} className="ml-2" />
                  </button>
                  <ul className="absolute left-0 mt-2 w-40 bg-white text-black shadow-lg rounded-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300">
                    {resourceDropdownItems.map((subItem, subIndex) => (
                      <li key={subIndex} className="px-4 py-2 hover:bg-gray-100">
                        <a href={subItem.href}>{subItem.name}</a>
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <a
                  href={item.href}
                  className="block px-3 xl:px-4 text-white hover:text-gray-400 relative after:content-[''] after:block after:h-[2px] after:w-full after:bg-white after:scale-x-0 group-hover:after:scale-x-100 after:transition-transform after:duration-300 font-extralight text-[14px] xl:text-[16px] capitalize whitespace-nowrap"
                >
                  {item.name}
                </a>
              )}
            </li>
          ))}
        </ul>
      </div>

      <div className="flex items-center">
        {/* Login button */}
        <div className="example-2 rounded-btn">
          <div className="inner">
            <button className="border border-[#3c3f47] rounded-lg font-light">Login</button>
          </div>
        </div>

        {/* Hamburger (Mobile only) */}
        <button
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          className="lg:hidden hamburger-btn text-white focus:outline-none z-30 ml-5"
          aria-label={isMenuOpen ? 'Close menu' : 'Open menu'}
        >
          {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
        </button>
      </div>

      {/* Mobile Menu */}
      <div
        className={`fixed inset-0 bg-black z-20 transform ${
          isMenuOpen ? 'translate-x-0' : 'translate-x-full'
        } lg:hidden flex flex-col justify-center rounded-menu`}
      >
        <ul className="flex flex-col items-center space-y-6 w-full px-8">
          {navItems.map((item, index) => (
            <li key={index} className="w-full text-center">
              {item.hasDropdown ? (
                <div>
                  <button
                    onClick={() => setIsDropdownOpen(!isDropdownOpen)}
                    className="block py-3 px-4 text-white text-xl font-light hover:text-gray-400 flex items-center justify-center w-full"
                  >
                    {item.name} <ChevronDown size={16} className="ml-2" />
                  </button>
                  {isDropdownOpen && (
                    <ul className="bg-gray-900 text-white rounded-md mt-2">
                      {resourceDropdownItems.map((subItem, subIndex) => (
                        <li key={subIndex} className="px-4 py-2 hover:bg-gray-700">
                          <a href={subItem.href}>{subItem.name}</a>
                        </li>
                      ))}
                    </ul>
                  )}
                </div>
              ) : (
                <a
                  href={item.href}
                  onClick={() => setIsMenuOpen(false)}
                  className="block py-3 px-4 text-white text-xl font-light hover:text-gray-400"
                >
                  {item.name}
                </a>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  )
}

export default Navbar
